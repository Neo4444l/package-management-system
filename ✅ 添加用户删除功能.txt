╔═══════════════════════════════════════════════════════════════╗
║                                                               ║
║          ✅ 添加用户删除功能                                  ║
║                                                               ║
╚═══════════════════════════════════════════════════════════════╝

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📝 功能说明
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

新增功能：
=========
在"用户管理"模块中，为每个用户添加删除按钮，允许管理员完全删除用户。


功能特点：
=========
1. 🗑️ 删除按钮 - 每个用户行都有删除按钮
2. 🔒 安全保护 - 不能删除当前登录的用户
3. ⚠️  二次确认 - 删除前需要确认，防止误操作
4. 🚫 不可撤销 - 删除操作是永久性的
5. ✅ 即时更新 - 删除后自动刷新用户列表


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
⚙️ 技术实现
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. 删除用户函数
==============

```javascript
const handleDeleteUser = async (userId, userEmail) => {
  try {
    setError('')
    setSuccess('')

    // 防止删除自己
    if (userId === currentUserId) {
      setError('不能删除当前登录的用户！')
      return
    }

    // 二次确认
    const confirmed = window.confirm(
      `⚠️ 警告：此操作不可撤销！\n\n确定要删除用户 "${userEmail}" 吗？\n\n删除后该用户将无法登录系统。`
    )

    if (!confirmed) return

    // 从profiles表删除用户
    const { error } = await supabase
      .from('profiles')
      .delete()
      .eq('id', userId)

    if (error) throw error

    setSuccess('用户已成功删除！')
    await fetchUsers()
  } catch (error) {
    setError('删除失败：' + error.message)
  }
}
```


2. 删除按钮UI
============

```jsx
<button
  onClick={() => handleDeleteUser(user.id, user.email)}
  className="btn-delete"
  disabled={user.id === currentUserId}
  title={user.id === currentUserId ? '不能删除自己' : '删除用户'}
>
  🗑️
</button>
```


3. 安全限制
==========

为了防止误操作，添加了以下限制：

a) 不能删除当前用户
```javascript
disabled={user.id === currentUserId}
```

b) 不能修改当前用户的角色
```javascript
<select disabled={user.id === currentUserId}>
```

c) 不能停用当前用户
```javascript
<button disabled={user.id === currentUserId}>
```


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎨 UI 设计
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

删除按钮样式：
============

```css
.btn-delete {
  padding: 6px 12px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1.2em;
  background: #e74c3c;      /* 红色背景 */
  color: white;
  transition: all 0.2s;
  margin-left: 5px;
}

.btn-delete:hover:not(:disabled) {
  background: #c0392b;      /* 深红色悬停 */
  transform: scale(1.05);   /* 轻微放大 */
}

.btn-delete:disabled {
  background: #bdc3c7;      /* 灰色禁用状态 */
  cursor: not-allowed;
  opacity: 0.5;
}
```


按钮状态：
=========

正常状态：
- 🗑️ 红色背景
- 鼠标悬停时变深红色
- 轻微放大效果

禁用状态（当前用户）：
- 🗑️ 灰色背景
- 鼠标变为禁用样式
- 降低透明度
- 工具提示："不能删除自己"


操作按钮布局：
============

┌────────────────────────────────────────────────────┐
│  [角色选择▼] [✓] [✕] [停用按钮] [🗑️删除]         │
│      ↑        ↑   ↑      ↑          ↑              │
│   角色下拉  确认 取消   状态切换   删除            │
└────────────────────────────────────────────────────┘


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🔒 安全机制
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

多层保护：
=========

第1层：前端UI禁用
---------------
- 当前用户的删除按钮被禁用
- 不能点击删除自己

```javascript
disabled={user.id === currentUserId}
```


第2层：函数内验证
---------------
- 即使绕过UI，函数内也会检查
- 防止删除当前用户

```javascript
if (userId === currentUserId) {
  setError('不能删除当前登录的用户！')
  return
}
```


第3层：用户确认
--------------
- 删除前弹出确认对话框
- 显示警告信息
- 需要用户主动确认

```javascript
const confirmed = window.confirm(
  `⚠️ 警告：此操作不可撤销！\n\n确定要删除用户 "${userEmail}" 吗？\n\n删除后该用户将无法登录系统。`
)
```


第4层：数据库RLS
--------------
- Supabase的Row Level Security
- 只有管理员可以删除profiles记录
- 后端层面的权限控制


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📊 操作流程
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

正常删除流程：
============

步骤1：点击删除按钮
------------------
管理员点击用户行的 🗑️ 按钮


步骤2：确认对话框
---------------
┌─────────────────────────────────────────────┐
│  ⚠️ 警告：此操作不可撤销！                  │
│                                             │
│  确定要删除用户 "user@example.com" 吗？    │
│                                             │
│  删除后该用户将无法登录系统。               │
│                                             │
│          [取消]    [确定]                   │
└─────────────────────────────────────────────┘


步骤3：执行删除
-------------
- 从profiles表删除用户记录
- 用户Auth账户保留，但无法登录
- 显示成功消息


步骤4：自动刷新
-------------
- 用户列表自动更新
- 删除的用户从列表中消失
- 统计数据更新


尝试删除自己：
============

步骤1：点击自己的删除按钮
-----------------------
- 按钮是禁用状态（灰色）
- 鼠标悬停显示："不能删除自己"
- 无法点击


步骤2：如果绕过UI
---------------
- 函数内会检查用户ID
- 显示错误信息："不能删除当前登录的用户！"
- 操作被阻止


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💡 删除机制说明
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

为什么只删除profiles表？
=======================

技术原因：
--------
1. Supabase Auth删除需要Admin API
   - 需要service_role密钥
   - 不能在前端暴露密钥
   - 需要后端/Edge Function

2. 只删除profiles是安全的
   - 用户Auth账户保留
   - 但系统无法识别该用户
   - 登录后无profile记录，视为无效

3. 效果等同于完全删除
   - 用户无法登录系统
   - 无法访问任何功能
   - 数据不会显示在用户列表


实际效果：
=========

删除前：
------
auth.users表：
- user_id: abc123
- email: user@example.com
- created_at: 2025-01-01

profiles表：
- id: abc123
- email: user@example.com
- role: user
- is_active: true


删除后：
------
auth.users表：
- user_id: abc123         ← 仍然存在
- email: user@example.com
- created_at: 2025-01-01

profiles表：
- (记录已删除)            ← 已删除


用户尝试登录：
------------
1. 输入邮箱密码
2. ✅ Supabase Auth验证通过
3. ❌ 系统查找profiles表 → 找不到记录
4. ❌ 视为无效用户，拒绝访问


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🧪 测试验证
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

测试 1：正常删除其他用户
=======================

步骤：
1. 使用管理员账号登录
2. 进入"用户管理"
3. 找到一个测试用户
4. 点击 🗑️ 删除按钮
5. 在确认对话框点击"确定"

预期结果：
✅ 显示成功消息："用户已成功删除！"
✅ 用户从列表中消失
✅ 总用户数减1
✅ 页面自动刷新


测试 2：尝试删除当前用户
======================

步骤：
1. 使用管理员账号登录
2. 进入"用户管理"
3. 找到当前登录用户的行
4. 查看删除按钮

预期结果：
✅ 删除按钮是禁用状态（灰色）
✅ 鼠标悬停显示："不能删除自己"
✅ 无法点击按钮
✅ 角色选择和停用按钮也是禁用的


测试 3：取消删除操作
==================

步骤：
1. 点击某用户的 🗑️ 按钮
2. 在确认对话框点击"取消"

预期结果：
✅ 对话框关闭
✅ 用户未被删除
✅ 列表保持不变
✅ 无任何变化


测试 4：删除后用户无法登录
========================

步骤：
1. 删除一个测试用户
2. 退出当前管理员账号
3. 使用被删除用户的账号登录

预期结果：
✅ Auth验证可能通过
❌ 系统查找profiles失败
❌ 无法进入系统
❌ 或显示"无效用户"


测试 5：统计数据更新
==================

步骤：
1. 记录删除前的统计数据
2. 删除一个普通用户
3. 查看统计卡片

预期结果：
✅ "总用户数" 减1
✅ "激活用户" 可能减1
✅ "普通用户" 数量减1
✅ 统计实时更新


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
📝 修改的文件
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

文件1：src/components/UserManagement.jsx
=======================================

修改内容：
1. ✅ 添加 handleDeleteUser 函数
2. ✅ 添加删除按钮到每个用户行
3. ✅ 为当前用户禁用所有操作按钮
4. ✅ 实现安全验证和确认机制


文件2：src/components/UserManagement.css
========================================

修改内容：
1. ✅ 添加 .btn-delete 样式
2. ✅ 添加 .btn-delete:hover 样式
3. ✅ 添加 .btn-delete:disabled 样式


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
⚠️ 注意事项
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. 删除操作不可撤销
==================
- ⚠️ 删除后无法恢复
- ⚠️ 建议谨慎使用
- ⚠️ 确保删除的是正确的用户


2. Auth账户保留
=============
- 用户的Supabase Auth账户仍然存在
- 只是profiles表记录被删除
- 如需完全删除，需要后端支持


3. 数据清理
==========
- 删除用户不会删除其操作日志
- operation_logs表的记录保留
- 如需清理，需额外处理


4. 批量删除建议
=============
如果未来需要批量删除功能：
- 可以添加复选框选择多个用户
- 添加"批量删除"按钮
- 实现类似的确认机制


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
💡 使用建议
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

什么时候应该删除用户？
====================

✅ 应该删除：
-----------
1. 测试账号不再需要
2. 员工离职
3. 误创建的重复账号
4. 恶意用户

❌ 不应该删除：
-------------
1. 暂时不活跃的用户 → 使用"停用"功能
2. 需要保留历史记录的用户 → 使用"停用"功能
3. 当前登录的用户 → 系统会阻止
4. 不确定的情况 → 先使用"停用"


建议工作流程：
============

步骤1：先停用用户
--------------
- 点击"停用"按钮
- 用户无法登录，但数据保留
- 观察一段时间


步骤2：确认无误后删除
-------------------
- 确认该用户确实不需要了
- 确认没有重要数据关联
- 执行删除操作


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
🎉 总结
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

新增功能：
=========
✅ 每个用户都有删除按钮（🗑️）
✅ 当前用户无法删除自己
✅ 删除前需要二次确认
✅ 删除后自动刷新列表
✅ 显示成功/错误提示

安全机制：
=========
✅ 多层权限验证
✅ UI禁用 + 函数验证
✅ 用户确认对话框
✅ 数据库RLS保护

UI设计：
=======
✅ 红色删除按钮，醒目易识别
✅ 悬停效果，交互友好
✅ 禁用状态清晰，防止误操作
✅ 工具提示，指导用户

删除效果：
=========
✅ 用户从列表中移除
✅ 无法登录系统
✅ 统计数据更新
✅ 操作不可撤销

修改文件：
=========
✓ src/components/UserManagement.jsx（添加删除函数和按钮）
✓ src/components/UserManagement.css（添加按钮样式）


━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📌 立即测试：

1. 刷新浏览器（Ctrl+Shift+R）
2. 进入"用户管理"
3. ✅ 每个用户行都有 🗑️ 删除按钮
4. ✅ 当前登录用户的删除按钮是灰色禁用的
5. ✅ 点击其他用户的删除按钮
6. ✅ 会弹出确认对话框
7. ✅ 确认后用户被删除，列表自动更新

用户删除功能已添加完成！🎉

